.btn-solid-a {
    --btn-solid-a-fg: var(--fg-color);
    --btn-solid-a-fg-rgb: var(--fg-color-rgb);
    --btn-solid-a-bg: var(--bg-color);
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    color: var(--btn-solid-a-fg, $black);
    background-color: var(--btn-solid-a-bg, $white);
    border: none;
    box-shadow: inset 0px 0px 0px 0px rgba(var(--btn-solid-a-fg-rgb), 0.1),
        0px 4px 4px -2px rgba(var(--btn-solid-a-fg-rgb), 0.2);
    min-height: 2.5rem;
    transition: 0.2s;
    .icon {
		font-size: 1.5em;
		line-height: 1;
	}

	.text~.icon {
		margin-left: 0.5em;
	}

	.icon~.text {
		margin-left: 0.5em;
	}

    &.icon-only {
        width: 2.5rem;
        // border-radius: 2.5rem;
        &.btn-lg{
            padding: 0.75em;
            width: 3.5rem;
            height: 3.5rem;
        }
        &.btn-xl{
            width: 5rem;
            height: 5rem;
        }
    }

    &:focus,
    &:active,
    &:hover {
        transition: 0.2s;
        // color: var(--btn-solid-a-bg);
        background-color: var(--btn-solid-a-bg, $white);
        box-shadow: inset 0px 0px 0.5em 2.25em rgba(var(--btn-solid-a-fg-rgb), 0.2),
            0px 0px 0px 0px var(--btn-solid-a-fg);
    }
}
// mixin
@mixin btn-solid-a( $colorName: 'primary') {
    @if $colorName=='light' {
        --btn-solid-a-fg: var(--dark);
        --btn-solid-a-fg-rgb: var(--dark-rgb);
        --btn-solid-a-bg: var(--light);
    } @else {
        --btn-solid-a-fg: var(--white);
        --btn-solid-a-fg-rgb: var(--white-rgb);
        --btn-solid-a-bg: var(--#{$colorName});
    }
}

// color variation
@each $color,
$value in $theme-colors {
    .btn-solid-a.btn-#{""+$color} {
        @include btn-solid-a( #{$color});
    }
}

.btn-solid-a.btn-gray{
    --btn-solid-a-fg: var(--dark);
    --btn-solid-a-fg-rgb: var(--dark-rgb);
    --btn-solid-a-bg: var(--gray);
}